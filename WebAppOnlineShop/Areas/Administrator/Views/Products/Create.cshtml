@model Models.EF.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Administrator/Views/Shared/_Layout.cshtml";
}
@section jsHeader{
    <script>
        $(function () {
            $("#@Html.IdFor(s => s.Quantity)")
            .on("input",function () {

                if ($(this).val() < 0) {
                    alert("Cannot be less than 0 ");
                    $(this).val("");
                }
            });
        });

         $(function () {
            $('.number-only').keypress(function (event) {
                var $this = $(this);
                if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
                   ((event.which < 48 || event.which > 57) &&
                   (event.which != 0 && event.which != 8))) {
                    event.preventDefault();
                }

                var text = $(this).val();
                if ((event.which == 46) && (text.indexOf('.') == -1)) {
                    setTimeout(function () {
                        if ($this.val().substring($this.val().indexOf('.')).length > 3) {
                            $this.val($this.val().substring(0, $this.val().indexOf('.') + 3));
                        }
                    }, 1);
                }

                if ((text.indexOf('.') != -1) &&
                    (text.substring(text.indexOf('.')).length > 4) &&
                    (event.which != 0 && event.which != 8) &&
                    ($(this)[0].selectionStart >= text.length - 4)) {
                    event.preventDefault();
                }
            });

            $('.number-only').bind("paste", function (e) {
                var text = e.originalEvent.clipboardData.getData('Text');
                if ($.isNumeric(text)) {
                    if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                        e.preventDefault();
                        $(this).val(text.substring(0, text.indexOf('.') + 3));
                    }
                }
                else {
                    e.preventDefault();
                }
            });
        
        });
    </script>
}
@section jsFooter{
    <script>
        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })

        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/Assets/Admin/js/plugins/ckfinder/config.js',
        });

         
    </script>
}
<div class="table-agile-info">
    <div class="panel panel-default">
        <div class="panel-heading">
            Create new product
        </div>

    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">


            <div class="form-group">
                <div class="col-sm-5 m-b-xs">
                </div>
                <div class="col-sm-5 m-b-xs">
                </div>
                <div class="col-md-1">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
                <div class="col-md-1">
                    <button class="btn  btn-warning"> @Html.ActionLink("Cancel", "Index")</button>
                </div>
            </div>
            <hr style="  text-align: center; height: 1px; padding-top: 10px; " noshade />

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
               

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Alias, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-3">
                        @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SupplierID, "SupplierID", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-3">
                        @Html.DropDownList("SupplierID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-1">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.TextBoxFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, id = "txtImage" })
                        <a id="btnSelectImage" href="#">Browse Picture</a>
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control number-only", @id = "Pr" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MetaKeyword, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.MetaKeyword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MetaKeyword, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-2">
                        <div class="checkbox"  style="padding-left: 20px;">
                            @Html.EditorFor(model => model.Status)
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HomeFlag, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-2">
                        <div class="checkbox" style="padding-left: 20px;">
                            @Html.EditorFor(model => model.HomeFlag)
                            @Html.ValidationMessageFor(model => model.HomeFlag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HotFlag, htmlAttributes: new { @class = "control-label col-md-3   " })
                    <div class="col-md-2">
                        <div class="checkbox"  style="padding-left: 20px;">
                            @Html.EditorFor(model => model.HotFlag)
                            @Html.ValidationMessageFor(model => model.HotFlag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>






        </div>
    }
    <footer class="panel-footer">
        <div class="row">


            <div class="col-sm-12 text-right text-center ">

            </div>
        </div>
    </footer>
</div>
